
//演示位运算符
public class BitOperator{
	
	public static void main(String[] args){
		
		/*
			1、	先得到2的补码=>2的源码00000000 00000000 00000000 00000010
				2的补码 00000000 00000000 00000000 00000010
			2、	3的补码 3的原码00000000 00000000 00000000 00000011
				3的补码	00000000 00000000 00000000 00000011
			3、按位&
				00000000 00000000 00000000 00000010
				00000000 00000000 00000000 00000011
				00000000 00000000 00000000 00000010	&
		*/
		System.out.println(2&3);//2
		
		/*
			1、先得到 -2的原码	10000000 00000000 00000000 00000010
			2、-2的反码			11111111 11111111 11111111 11111101
			3、-2的补码			11111111 11111111 11111111 11111110
			4、~-2操作			00000000 00000000 00000000 00000001运算后的补码
			5、运算后的源码  就是 00000000 00000000 00000000 00000001
		*/
		System.out.println(~-2);//1
		
		/*
			1、得到2的补码	00000000 00000000 00000000 00000010
			2、~2操作		11111111 11111111 11111111 11111101
			3、运算后的反码	11111111 11111111 11111111 11111100
			4、运算后的原码	10000000 00000000 00000000 00000011
		*/
		System.out.println(~2);//-3
		
	}
	
}